# -*- coding: utf-8 -*-
"""Actividad_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18Y11mx-eBvyGVNC2jeYG8B_P2AOxiVwY

# Parte 1
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn import linear_model
from sklearn.metrics import mean_absolute_error, mean_squared_error, median_absolute_error, r2_score, explained_variance_score

#Obteniendo loas datos del dataframe
df = pd.read_csv('df_regresion_lineal_1.cvs')
#print(df)

x = np.asanyarray(df[['x']])
y = np.asanyarray(df[['y']])
#print(y)

#Modelo y prediccion
model = linear_model.LinearRegression()
model.fit(x, y)
yp = model.predict(x)
#yp2=model.predict([[1]])
#print(yp2)

#Graficando
plt.figure()
plt.grid()
plt.title('Regresion Lineal')
plt.xlabel('X')
plt.ylabel('Y')

plt.plot(x, y, 'bo')
plt.plot(x, yp, 'r-', lw = 3)
plt.legend(['Dato','Predicci칩n'])

plt.show()

#Metricas de error

#Error absoluto medio
MAE = mean_absolute_error(y,yp)

#Error cuadratico medio
MSE = mean_squared_error(y,yp)

#Error mediano absoluto
MedAE = median_absolute_error(y,yp)

#Coeficiente R2
R2 = r2_score(y,yp)

#Coeficiente de explicacion de la varianza
EVS = explained_variance_score(y,yp)

print('\nMAE =', MAE)
print('MSE =', MSE)
print('MedAE =', MedAE)
print('R2 =', R2)
print('EVS =', EVS)

"""# Parte 2"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn import linear_model
from sklearn.metrics import mean_absolute_error, mean_squared_error, median_absolute_error, r2_score, explained_variance_score

#Obteniendo loas datos del dataframe
df = pd.read_csv('df_regresion_lineal_pop.cvs')
#print(df)

year = np.asanyarray(df[['year']])
pop = np.asanyarray(df[['pop']])
#print(year)

#Modelo y prediccion
model = linear_model.LinearRegression()
model.fit(year, pop)
pop_p = model.predict(year)

yp2=model.predict([[2020.0]])

#Graficando
plt.figure()
plt.grid()
plt.title('Regresion Lineal')
plt.xlabel('A침o')
plt.ylabel('Poblaci칩n')

plt.plot(year, pop, 'bo')
plt.plot(year, pop_p, 'r-', lw = 3)
plt.legend(['Datos','Predicci칩n'])

plt.show()

#Metricas de error

#Error absoluto medio
MAE = mean_absolute_error(pop,pop_p)

#Error cuadratico medio
MSE = mean_squared_error(pop,pop_p)

#Error mediano absoluto
MedAE = median_absolute_error(pop,pop_p)

#Coeficiente R2
R2 = r2_score(pop,pop_p)

#Coeficiente de explicacion de la varianza
EVS = explained_variance_score(pop,pop_p)

print('\nMAE =', MAE)
print('MSE =', MSE)
print('MedAE =', MedAE)
print('R2 =', R2)
print('EVS =', EVS)

print('\nPoblacion predecida para 2020 = ',yp2)